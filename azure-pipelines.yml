# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'VS2017-Win2016'

job: CI Build
  displayName:'CI Build'

variables:
  buildConfiguration: 'Release'
  testConfiguration: '--configuration $(buildConfiguration) --collect "Code coverage"'
  publishConfiguration: '/nologo /p:PublishProfile=$(buildConfiguration) /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /maxcpucount:1 /p:platform="Any CPU" /p:configuration=$(buildConfiguration)'
  sonarOrganization: 'null-null99149'
  sonarProject: 'CSD_CA1'
  testProjects: '**/*UnitTests/*.csproj'

steps:
- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
   SonarCloud: SonarCloud
   organization: $(sonarOrganization)
   projectKey: $(sonarProject)
   projectName: $(sonarProject)
   extraProperties: |
    sonar.organization=$(sonarOrganization)
    sonar.branch.name=$(Build.SourceBranchName)

- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests'
  inputs:
   command: test
   projects: $(testProjects)
   arguments: $(testConfiguration)
   
- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'
  
- script: dotnet publish BPCalculator.sln $(publishConfiguration)
  displayName: 'Publish solution'
  
- task: CopyFiles@2
  displayName: 'Copy Files'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
